find_package(Doxygen)
find_package(Java COMPONENTS Runtime)
find_package(Sphinx)

configure_file(Doxyfile.in Doxyfile @ONLY)
configure_file(python/conf.py.in conf.py @ONLY)

add_custom_target(docs_pre
    # First run of doxygen to generate the tag file that sphinx needs to link
    # python docs to C++ docs.
    COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
    VERBATIM
)

add_custom_target(sphinx
    COMMAND ${SPHINX_EXECUTABLE}
            -b singlehtml
            -c ${CMAKE_CURRENT_BINARY_DIR}
            ${CMAKE_CURRENT_SOURCE_DIR}/python
            ${CMAKE_CURRENT_BINARY_DIR}/html
    DEPENDS docs_pre
    VERBATIM
)

add_custom_target(plantuml
    COMMAND ${Java_JAVA_EXECUTABLE}
            -Djava.awt.headless=true
            -jar ${ELAPSE_ROOT_SOURCE_DIR}/tools/plantuml.jar
            -Sshadowing=false
            -o ${CMAKE_CURRENT_BINARY_DIR}/img
            "${ELAPSE_ROOT_SOURCE_DIR}/**.(c|cpp|h|dox)"
    VERBATIM
)

if(BUILD_DOCS)
    set(_ALL_IF_BUILD_DOCS ALL)
endif()

add_custom_target(docs
    # Second run of doxygen picks up docs generated by sphinx and plantuml
    ${_ALL_IF_BUILD_DOCS}
    COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
    VERBATIM
    DEPENDS plantuml sphinx
)

install(
    DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/html ${CMAKE_CURRENT_BINARY_DIR}/img
    DESTINATION ${INSTALL_DOC_DIR}
    OPTIONAL
)
