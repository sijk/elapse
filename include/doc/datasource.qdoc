/*!
    \class DataSource
    \ingroup pipeline
    \inmodule core

    \brief The DataSource class is the base class for elements that receive data
    from the device over the network.

    Each Pipeline has one DataSource which provides data to several
    \l{SampleDecoder}s.
*/

/*!
    \fn DataSource::DataSource(QObject *parent)
    Construct a new DataSource as a child of the given \a parent.
*/

/*!
    \fn DataSource::~DataSource()
    Destroy this DataSource.
*/

/*!
    \property DataSource::host
    \brief the device's hostname.
*/

/*!
    \fn DataSource::eegReady(const QByteArray &data)
    Emitted when EEG \a data arrives from the device.
*/

/*!
    \fn DataSource::videoReady(const QByteArray &data)
    Emitted when video \a data arrives from the device.
*/

/*!
    \fn DataSource::imuReady(const QByteArray &data)
    Emitted when IMU \a data arrives from the device.
*/

/*!
    \fn DataSource::error(const QString &msg)
    Emitted when an error occurs. The \a msg is a human-readable string which
    should be useful for debugging the error.
*/

/*!
    \fn DataSource::started()
    Emitted when the DataSource has succesfully connected to the device and is
    ready to receive data.
    \sa start()
*/

/*!
    \fn DataSource::start()
    Start receiving data from the device. Classes inheriting from DataSource
    must implement this method and ensure that started() is emitted at the
    appropriate time.
    \sa started(), stop()
*/

/*!
    \fn DataSource::stop()
    Stop receiving data from the device.Classes inheriting from DataSource
    must implement this method.
    \sa start()
*/
